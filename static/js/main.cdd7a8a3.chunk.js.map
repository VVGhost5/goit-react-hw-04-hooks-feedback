{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackButtons/Feedback.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackButtons/FeedbackButtons.js","components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","data/buttons.js","App.js","index.js"],"names":["module","exports","FeedbackButtons","buttons","onHandleIncrement","className","styles","list","map","id","value","item","name","button","onClick","evt","Section","title","children","Notification","message","notification","Statistics","good","neutral","bad","totalFeedback","positiveFeedbackPercent","App","useState","feedbacks","setFeedbacks","target","prevState","positiveFeedbackPercentage","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,KAAO,2B,iBCAzBD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,mBCAzDD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,qJCoClBC,EAlCS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,kBAClC,OACE,qBAAKC,UAAU,UAAf,SACE,oBAAIA,UAAWC,IAAOC,KAAtB,SACGJ,EAAQK,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAClB,OACE,oBAAIL,UAAWC,IAAOK,KAAtB,SACE,wBACEC,KAAMF,EACNL,UAAWC,IAAOO,OAClBC,QAAS,SAACC,GACRX,EAAkBW,IAJtB,SAOGL,KAR4BD,W,gBCQ9BO,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIb,UAAWC,IAAOW,MAAtB,SAA8BA,IAC7BC,M,gCCIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGf,UAAWC,IAAOe,aAArB,SAAoCD,KC4C9BE,EA5CI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,cACAC,EALiB,EAKjBA,wBALiB,OAOjB,qBAAKtB,UAAU,UAAf,SACGkB,GAAQC,GAAWC,EAClB,+BACE,oBAAepB,UAAWC,IAAOK,KAAjC,SACE,0CAAaY,MADP,QAIR,oBAAclB,UAAWC,IAAOK,KAAhC,SACE,yCAAYc,MADN,OAIR,oBAAkBpB,UAAWC,IAAOK,KAApC,SACE,6CAAgBa,MADV,WAIR,oBAAgBnB,UAAWC,IAAOK,KAAlC,SACE,2CAAce,MADR,SAIR,oBAA2BrB,UAAWC,IAAOK,KAA7C,SACE,uDAA0BgB,EAA1B,SADM,uBAKV,cAAC,EAAD,CAAcP,QAAS,yBC7BdjB,EANC,CACd,CAAEM,GAAI,EAAGC,MAAO,QAChB,CAAED,GAAI,EAAGC,MAAO,WAChB,CAAED,GAAI,EAAGC,MAAO,QCGH,SAASkB,IAAO,IAAD,EACMC,mBAAS,CACzCN,KAAM,EACNC,QAAS,EACTC,IAAK,IAJqB,mBACrBK,EADqB,KACVC,EADU,KAOpBR,EAAuBO,EAAvBP,KAAMC,EAAiBM,EAAjBN,QAASC,EAAQK,EAARL,IAoBvB,OACE,sBAAKpB,UAAU,YAAf,UACE,cAAC,EAAD,CAASY,MAAM,wBAAf,SACE,cAAC,EAAD,CACEd,QAASA,EACTC,kBAvB6B,SAAC,GAAgB,IAC5CQ,EAD2C,EAAboB,OAC9BpB,KAERmB,GAAa,SAACE,GAAD,mBAAC,eACTA,GADQ,kBAEVrB,EAAOqB,EAAUrB,GAAQ,YAqB1B,cAAC,EAAD,CAASK,MAAM,aAAf,SACE,cAAC,EAAD,CACEM,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,cArBCH,EAAOC,EAAUC,EAsBlBE,wBAnBgC,WACtC,IAAMO,EAA8BX,GAAQA,EAAOC,EAAUC,GAAQ,IACrE,OAAOU,KAAKC,MAAMF,GAiBaG,UC1CnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,W","file":"static/js/main.cdd7a8a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__cl-le\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__3CUN8\",\"button\":\"Feedback_button__dbmVm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1Jplq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__38MTi\"};","import styles from \"./Feedback.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackButtons = ({ buttons, onHandleIncrement }) => {\n  return (\n    <div className=\"wrapper\">\n      <ul className={styles.list}>\n        {buttons.map(({ id, value }) => {\n          return (\n            <li className={styles.item} key={id}>\n              <button\n                name={value}\n                className={styles.button}\n                onClick={(evt) => {\n                  onHandleIncrement(evt);\n                }}\n              >\n                {value}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nFeedbackButtons.propTypes = {\n  buttons: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      value: PropTypes.string,\n    })\n  ),\n  onHandleIncrement: PropTypes.func.isRequired,\n};\n\nexport default FeedbackButtons;\n","import styles from \"./Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import styles from \"./Notification.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <p className={styles.notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styles from \"./Statistics.module.css\";\nimport PropTypes from \"prop-types\";\nimport Notification from \"../Notification/Notification\";\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  totalFeedback,\n  positiveFeedbackPercent,\n}) => (\n  <div className=\"wrapper\">\n    {good || neutral || bad ? (\n      <ul>\n        <li key=\"good\" className={styles.item}>\n          <span>Good: {good}</span>\n        </li>\n\n        <li key=\"bad\" className={styles.item}>\n          <span>Bad: {bad}</span>\n        </li>\n\n        <li key=\"neutral\" className={styles.item}>\n          <span>Neutral: {neutral}</span>\n        </li>\n\n        <li key=\"total\" className={styles.item}>\n          <span>Total: {totalFeedback}</span>\n        </li>\n\n        <li key=\"positiveFeedback\" className={styles.item}>\n          <span>Positive feedback: {positiveFeedbackPercent} %</span>\n        </li>\n      </ul>\n    ) : (\n      <Notification message={\"No feedback given\"} />\n    )}\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  totalFeedback: PropTypes.number.isRequired,\n  positiveFeedbackPercent: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","const buttons = [\n  { id: 1, value: \"good\" },\n  { id: 2, value: \"neutral\" },\n  { id: 3, value: \"bad\" },\n];\n\nexport default buttons;\n","import React, { useState } from \"react\";\nimport FeedbackButtons from \"./components/FeedbackButtons/FeedbackButtons\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport buttons from \"./data/buttons\";\n\nexport default function App() {\n  const [feedbacks, setFeedbacks] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  });\n\n  const { good, neutral, bad } = feedbacks;\n\n  const handleIncrementFeedbackValue = ({ target }) => {\n    const { name } = target;\n\n    setFeedbacks((prevState) => ({\n      ...prevState,\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const positiveFeedbackPercentage = (good / (good + neutral + bad)) * 100;\n    return Math.round(positiveFeedbackPercentage);\n  };\n\n  return (\n    <div className=\"container\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackButtons\n          buttons={buttons}\n          onHandleIncrement={handleIncrementFeedbackValue}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          bad={bad}\n          neutral={neutral}\n          totalFeedback={countTotalFeedback()}\n          positiveFeedbackPercent={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}